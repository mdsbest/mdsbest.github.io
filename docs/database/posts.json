{
  "posts": [
    {
      "id": 1,
      "title": "SQL Show - How to View Tables in MySQL, Postgres, MariaDB",
      "slug": "sql-show",
      "date": "2023-01-09",
      "categories": ["programming", "sql"],
      "excerpt": "Learn how to view and list database tables in MySQL, Postgres, or MariaDB databases from the command line.",
      "image": "assets/images/sql-show.jpg",
      "content": "<h2>Introduction to SQL Show Commands</h2>\n\n<p>Successfully working with <a href=\"https://www.mysql.com/\" target=\"_blank\">MySQL</a> databases kind of assumes that you have an idea of what's in your databases, right?</p>\n\n<p>If you're using an application, or some kind of GUI (graphical user interface), it might be as easy as clicking an icon to see what you're working with.</p>\n\n<p>But if you're coming in from the command line, you don't have that luxury.</p>\n\n<p>In this lesson we will see how to view / list database tables in a MySQL, Postgres, or MariaDB database from the command line.</p>\n\n<h2>Connecting to MySQL</h2>\n\n<p>In case you haven't connected to MySQL yet:</p>\n\n<ol>\n  <li>Open Terminal</li>\n  <li>Connect to MySQL server with the following command:</li>\n</ol>\n\n<pre><code>$ mysql -u root -p</code></pre>\n\n<p>When prompted for your password, enter it if you have one.</p>\n\n<p>Chances are if you don't know it - you don't have one. So in that case just press the <code>return</code> key.</p>\n\n<img src=\"assets/images/logo.png\" alt=\"MySQL Login\" />\n\n<p>When connected, you're prompt will change to <code>mysql&gt;</code></p>\n\n<h2>Listing Databases with SHOW DATABASES</h2>\n\n<p>The most obvious starting point is to figure out what databases you have to work with.</p>\n\n<p>To list your databases, use the <code>SHOW</code> statement.</p>\n\n<pre><code># SHOW DATABASES;\n\nmysql> SHOW DATABASES;</code></pre>\n\n<img src=\"assets/images/mysql-show-databases.png\" alt=\"MySQL Show Databases\" />\n\n<p>Switch to your desired databases with the <code>USE</code> statement.</p>\n\n<pre><code># USE &lt;database_name&gt;;\n\nmysql> USE pixeldevs;</code></pre>\n\n<img src=\"assets/images/mysql-USE-database.png\" alt=\"MySQL Use Database\" />\n\n<h2>Viewing Tables with SHOW TABLES</h2>\n\n<p>You're connected and ready to use a specific database.</p>\n\n<p>To see the tables & views in the selected database, use the <code>SHOW</code> statement.</p>\n\n<pre><code># SHOW TABLES;\n\nmysql> SHOW TABLES;</code></pre>\n\n<img src=\"assets/images/mysql-SHOW-TABLES.png\" alt=\"MySQL Show Tables\" />\n\n<h3>Getting More Information with SHOW FULL TABLES</h3>\n\n<p>If you'd like a little more information about the each table's type, add the <code>FULL</code> modifier into your statement.</p>\n\n<pre><code># SHOW FULL TABLES;\n\nmysql> SHOW FULL TABLES;</code></pre>\n\n<img src=\"assets/images/mysql-SHOW-FULL-TABLES.png\" alt=\"MySQL Show Full Tables\" />\n\n<h2>Viewing Tables from a Different Database</h2>\n\n<p>Alternatively, if you don't want to \"use\" a particular database, you can run the same commands by on different databases, and database tables, by modifying your statement's specificity a bit.</p>\n\n<pre><code># SHOW TABLES FROM &lt;database_name&gt;;\n\nmysql> SHOW TABLES FROM pixelsdevs;</code></pre>\n\n<img src=\"assets/images/show-tables-FROM.png\" alt=\"MySQL Show Tables From\" />\n\n<p>Alternatively you can use the <code>IN</code> clause:</p>\n\n<pre><code># SHOW TABLES IN &lt;database_name&gt;\n\nmysql> SHOW TABLES IN sales_example;\n\nmysql> SHOW TABLES IN pixeldevs;</code></pre>\n\n<img src=\"assets/images/mysql-SHOW-TABLES-IN.png\" alt=\"MySQL Show Tables In\" />\n\n<h2>Conclusion</h2>\n\n<p>The <code>SHOW</code> command in MySQL is a powerful tool for exploring your database structure from the command line. Whether you need to view databases, tables, or get more detailed information, these commands will help you navigate your database environment efficiently.</p>\n\n<p>Remember that all SQL commands in MySQL must end with a semicolon (;) to be executed properly.</p>"
    },
    {
      "id": 2,
      "title": "How to Combine/Merge Multiple CSV or Excel Files for Mac & PC",
      "slug": "how-to-combine-merge-multiple-csv-or-excel-files-for-mac-pc",
      "date": "2023-02-15", 
      "categories": ["productivity", "data"],
      "excerpt": "A step-by-step guide on how to combine multiple CSV or Excel files on both Mac and PC.",
      "image": "assets/images/combine-csv.jpg",
      "content": "<h2>Introduction to Combining CSV Files</h2>\n\n<p>Working with multiple CSV or Excel files can be challenging when you need to analyze data across all of them. This guide will show you efficient methods to combine these files on both Mac and PC.</p>\n\n<h2>Method 1: Using Excel's Power Query</h2>\n\n<p>Microsoft Excel offers a powerful feature called Power Query that makes combining files simple:</p>\n\n<ol>\n  <li>Open Excel and go to the Data tab</li>\n  <li>Click \"Get Data\" > \"From File\" > \"From Folder\"</li>\n  <li>Select the folder containing your CSV/Excel files</li>\n  <li>Click \"Combine & Transform Data\"</li>\n  <li>Excel will detect the structure and combine files with similar columns</li>\n</ol>\n\n<h2>Method 2: Using Terminal on Mac</h2>\n\n<p>For command-line enthusiasts on Mac, you can use the Terminal:</p>\n\n<pre><code># For CSV files with headers (keeping only the first header)\n$ head -n 1 file1.csv > combined.csv\n$ for file in *.csv; do tail -n +2 \"$file\" >> combined.csv; done</code></pre>\n\n<h2>Method 3: Using Python (Cross-Platform)</h2>\n\n<p>Python provides a flexible solution that works on any operating system:</p>\n\n<pre><code>import pandas as pd\nimport glob\n\n# Get all CSV files in the directory\nall_files = glob.glob(\"path/to/your/files/*.csv\")\n\n# Combine all files\ncombined_df = pd.concat([pd.read_csv(f) for f in all_files])\n\n# Save to a new file\ncombined_df.to_csv(\"combined_output.csv\", index=False)</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>Combining CSV or Excel files doesn't have to be complicated. Whether you prefer a graphical interface like Excel or command-line solutions, these methods will save you time when working with multiple data files.</p>"
    },
    {
      "id": 3,
      "title": "How to Disable Prettier Formatting for Individual Files or Folders",
      "slug": "how-to-disable-prettier-formatting-for-individual-files-or-folders",
      "date": "2023-03-10",
      "categories": ["programming", "tools"],
      "excerpt": "Learn how to selectively disable Prettier formatting for specific files or folders in your project.",
      "image": "assets/images/prettier.jpg",
      "content": "<h2>Understanding Prettier Configuration</h2>\n\n<p>Prettier is an excellent code formatter that helps maintain consistent code style across projects. However, there are situations where you might want to exclude certain files or directories from being formatted.</p>\n\n<h2>Method 1: Using .prettierignore</h2>\n\n<p>The simplest way to ignore files is by creating a <code>.prettierignore</code> file in your project root:</p>\n\n<pre><code># Ignore all JSON files\n*.json\n\n# Ignore a specific folder\ngenerated/\n\n# Ignore a specific file\nsrc/legacy-code.js</code></pre>\n\n<p>This file uses the same pattern syntax as .gitignore, making it familiar for most developers.</p>\n\n<h2>Method 2: Using Prettier Directives in Files</h2>\n\n<p>For individual files, you can disable Prettier entirely by adding a special comment at the top:</p>\n\n<pre><code>// prettier-ignore-file</code></pre>\n\n<p>Or disable formatting for specific sections:</p>\n\n<pre><code>// prettier-ignore\nconst uglyFormattedCode = {\n    foo:    \"bar\",\n    baz: 42,\n}</code></pre>\n\n<h2>Method 3: Using VS Code Settings</h2>\n\n<p>If you're using VS Code, you can configure it to exclude files from Prettier formatting:</p>\n\n<pre><code>{\n  \"prettier.disableLanguages\": [\"markdown\", \"css\"],\n  \"[javascript]\": {\n    \"editor.formatOnSave\": false\n  }\n}</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>Being selective about which files Prettier formats gives you the flexibility to maintain consistent code style while accommodating special cases or legacy code that shouldn't be reformatted.</p>"
    },
    {
      "id": 4,
      "title": "HTTP vs HTTPS - What's the Difference?",
      "slug": "http-vs-https",
      "date": "2023-04-05",
      "categories": ["web", "security"],
      "excerpt": "Understand the key differences between HTTP and HTTPS and why HTTPS is crucial for modern websites.",
      "image": "assets/images/http-vs-https.jpg",
      "content": "<h2>Understanding HTTP and HTTPS</h2>\n\n<p>HTTP (Hypertext Transfer Protocol) and HTTPS (Hypertext Transfer Protocol Secure) are the foundation of data communication on the web. While they serve the same basic purpose, the security implications are vastly different.</p>\n\n<h2>What is HTTP?</h2>\n\n<p>HTTP is the original protocol used for transmitting web pages. When you visit an HTTP website:</p>\n\n<ul>\n  <li>Data is sent in plaintext</li>\n  <li>No encryption is provided</li>\n  <li>Anyone monitoring the network can read the data</li>\n  <li>No verification of the server's identity is performed</li>\n</ul>\n\n<h2>What is HTTPS?</h2>\n\n<p>HTTPS adds a security layer using SSL/TLS (Secure Sockets Layer/Transport Layer Security) protocols. When you visit an HTTPS website:</p>\n\n<ul>\n  <li>Data is encrypted during transmission</li>\n  <li>The server's identity is verified using certificates</li>\n  <li>Data integrity is maintained (no tampering during transit)</li>\n  <li>The connection is authenticated (you're connecting to the real website)</li>\n</ul>\n\n<h2>Why HTTPS is Essential</h2>\n\n<p>In today's digital landscape, HTTPS is no longer optional:</p>\n\n<ul>\n  <li>Browsers mark HTTP sites as \"Not Secure\"</li>\n  <li>Google uses HTTPS as a ranking factor</li>\n  <li>Users expect privacy and security</li>\n  <li>Many modern web features require HTTPS</li>\n  <li>Payment processing requires HTTPS compliance</li>\n</ul>\n\n<h2>How to Identify HTTPS Websites</h2>\n\n<p>You can identify HTTPS websites by:</p>\n\n<ul>\n  <li>Looking for \"https://\" in the URL</li>\n  <li>Finding a padlock icon in the address bar</li>\n  <li>Seeing \"Secure\" or similar text (depends on browser)</li>\n</ul>\n\n<h2>Conclusion</h2>\n\n<p>The transition from HTTP to HTTPS represents a significant improvement in web security. For website owners, implementing HTTPS is now a standard practice rather than an optional feature, protecting both your visitors and your site's reputation.</p>"
    },
    {
      "id": 5,
      "title": "Audio Diffusion AI - The Future of Sound Generation",
      "slug": "audio-diffusion-ai",
      "date": "2023-05-20",
      "categories": ["ai", "audio"],
      "excerpt": "Exploring the cutting-edge technology behind audio diffusion AI and its applications.",
      "image": "assets/images/audio-ai.jpg",
      "content": "<h2>Understanding Audio Diffusion Models</h2>\n\n<p>Audio diffusion AI represents a breakthrough in how computers generate sound. Similar to how diffusion models revolutionized image generation, these technologies are transforming audio creation.</p>\n\n<h2>How Audio Diffusion Models Work</h2>\n\n<p>At their core, audio diffusion models follow this general process:</p>\n\n<ol>\n  <li>Start with random noise</li>\n  <li>Gradually refine the signal by removing noise</li>\n  <li>Use neural networks trained on vast audio datasets</li>\n  <li>Guide the generation with text prompts or reference audio</li>\n</ol>\n\n<p>This denoising approach allows the model to generate increasingly coherent audio that matches desired characteristics.</p>\n\n<h2>Popular Audio Diffusion AI Tools</h2>\n\n<p>Several groundbreaking tools have emerged:</p>\n\n<ul>\n  <li><strong>AudioLDM</strong>: Generates audio from text descriptions</li>\n  <li><strong>Riffusion</strong>: Creates music by visualizing spectrogram images</li>\n  <li><strong>AudioGen</strong>: Facebook AI's approach to controllable audio generation</li>\n  <li><strong>MusicLM</strong>: Google's text-to-music generator</li>\n</ul>\n\n<h2>Applications in Various Industries</h2>\n\n<p>These technologies are finding applications across numerous fields:</p>\n\n<ul>\n  <li><strong>Music Production</strong>: Creating background tracks, sound effects, and even full compositions</li>\n  <li><strong>Film and Gaming</strong>: Generating ambient soundscapes and foley effects</li>\n  <li><strong>Accessibility</strong>: Creating realistic text-to-speech for those with speech impairments</li>\n  <li><strong>Audio Restoration</strong>: Cleaning up and enhancing historical recordings</li>\n</ul>\n\n<h2>Ethical Considerations</h2>\n\n<p>As with all AI technologies, audio diffusion raises important questions:</p>\n\n<ul>\n  <li>Copyright implications for generated content</li>\n  <li>Potential for deepfake audio misuse</li>\n  <li>Impact on professional musicians and sound designers</li>\n  <li>Bias in training data affecting generated outputs</li>\n</ul>\n\n<h2>The Future of Audio AI</h2>\n\n<p>Looking ahead, we can expect:</p>\n\n<ul>\n  <li>More precise control over generated audio</li>\n  <li>Integration with other creative tools</li>\n  <li>Real-time generation capabilities</li>\n  <li>Higher fidelity and longer coherent outputs</li>\n</ul>\n\n<h2>Conclusion</h2>\n\n<p>Audio diffusion AI represents a fundamental shift in how we think about sound creation. While the technology is still evolving, its potential to transform industries and creative processes is undeniable.</p>"
    }
  ]
} 